(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{1248:function(t,e,n){"use strict";n.r(e);n(134),n(59),n(28),n(73);var l={name:"Set",components:{Dynamic:n(52).a},data:function(){return{index:0,labels:[{label:"交集",desc:"获取同时在AB两个集合中的元素"},{label:"并集",desc:"AB两个集合中的元素合并在一个集合中"},{label:"在A,不在B",desc:"在A集合中，但是不在B集合中的元素"},{label:"在B，不在A",desc:"在B集合中，但是不在A集合中的元素"},{label:"不同时在AB",desc:"要么在A，要么在B集合中的元素"}],setA:"",setB:"",results:"",resultDesc:"",joinSymbol:",",newLineOutput:!1}},watch:{setA:function(){this.diff()},setB:function(){this.diff()},index:function(){this.diff()}},methods:{toSet:function(content){var t=[];t=content.indexOf(",")>=0?content.split(","):content.split("\n");var e=[];return t.forEach((function(i){var t=i.trim();t&&!e.includes(t)&&e.push(t)})),e},diff:function(){var t,a=this.toSet(this.setA),b=this.toSet(this.setB);t=0===this.index?a.filter((function(t){return b.includes(t)})):1===this.index?a.concat(b.filter((function(i){return!a.includes(i)}))):2===this.index?a.filter((function(i){return!b.includes(i)})):3===this.index?b.filter((function(i){return!a.includes(i)})):(t=a.filter((function(i){return!b.includes(i)}))).concat(b.filter((function(i){return!a.includes(i)}))),this.resultDesc="A集合元素: "+a.length+"个; B集合元素："+b.length+"个; 返回结果元素: "+t.length,this.results=t.join(this.joinSymbol)},handleChange:function(){this.newLineOutput=!this.newLineOutput,this.newLineOutput?this.joinSymbol="\n":this.joinSymbol=",",this.diff()}}},o=n(2),component=Object(o.a)(l,(function(){var t=this,e=t._self._c;return e("div",{staticClass:"textdiff"},[e("nya-container",{attrs:{title:"集合运算"}},[e("div",{staticClass:"input-group"},[e("div",{staticClass:"radio-group"},[e("nya-radio-group",{model:{value:t.index,callback:function(e){t.index=e},expression:"index"}},t._l(t.labels,(function(label,i){return e("nya-radio",{key:i,staticClass:"mr-15",attrs:{value:i,label:label.label}})})),1)],1),t._v(" "),e("span",[t._v("   |   ")]),t._v(" "),e("nya-checkbox",{attrs:{checked:t.newLineOutput,label:"换行输出"},on:{change:t.handleChange}})],1),t._v(" "),e("small",[t._v(" "+t._s(t.labels[t.index].desc)+" ")]),t._v(" "),e("div",{staticClass:"row top-margin-1em"},[e("div",{staticClass:"col-sm-12 col-md-6 col-lg-6 col-xl-6 custom-bg-color custom-by-both"},[e("nya-input",{attrs:{className:"mb-15",fullwidth:"",rows:"10",type:"textarea",autofocus:"",autocomplete:"off",label:"A集合",placeholder:"集合元素以英文逗号或换行分割"},model:{value:t.setA,callback:function(e){t.setA=e},expression:"setA"}})],1),t._v(" "),e("div",{staticClass:"col-sm-12 col-md-6 col-lg-6 col-xl-6 custom-bg-color custom-by-both"},[e("nya-input",{attrs:{className:"mb-15",fullwidth:"",rows:"10",type:"textarea",autocomplete:"off",label:"B集合",placeholder:"集合元素以英文逗号或换行分割"},model:{value:t.setB,callback:function(e){t.setB=e},expression:"setB"}})],1)])]),t._v(" "),e("nya-container",{directives:[{name:"show",rawName:"v-show",value:this.setA||this.setB,expression:"this.setA || this.setB"}],attrs:{title:"计算结果",desc:t.resultDesc}},[e("nya-copy",{attrs:{copy:t.results}},[e("pre",[t._v(t._s(t.results))])])],1),t._v(" "),e("nya-foot-info",{attrs:{title:"Tips"}},[e("li",[t._v(" 纯JS实现集合运算：计算数组的交、差、并、补")])])],1)}),[],!1,null,null,null);e.default=component.exports}}]);